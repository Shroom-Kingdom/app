name: Publish

on:
  push:
    branches: [master]
    paths:
      - ".cargo/**"
      - ".github/workflows/publish.yml"
      - "app/**"
      - "lib/**"
      - "Cargo.lock"
      - "Cargo.toml"
      - "rust-toolchain"

env:
  WASM_BINDGEN_VERSION: 0.2.83
  BINARYEN_VERSION: 108

jobs:
  publish:
    runs-on: ubuntu-latest

    steps:
      - uses: actions/checkout@v2

      - name: Install Node
        uses: actions/setup-node@v2
        with:
          node-version: '16'
          cache: 'yarn'

      - name: Install Node dependencies
        run: yarn install

      - uses: actions-rs/toolchain@v1
        name: Install Toolchain
        with:
          profile: minimal
          toolchain: stable
          override: true

      - name: Install Rust WebAssembly
        run: rustup target add wasm32-unknown-unknown

      - name: Install wasm bindgen
        run: |
          curl -L https://github.com/rustwasm/wasm-bindgen/releases/download/${{ env.WASM_BINDGEN_VERSION }}/wasm-bindgen-${{ env.WASM_BINDGEN_VERSION }}-x86_64-unknown-linux-musl.tar.gz --output wasm-bindgen.tar.gz
          tar -zxvf wasm-bindgen.tar.gz wasm-bindgen-${{ env.WASM_BINDGEN_VERSION }}-x86_64-unknown-linux-musl/wasm-bindgen
          mkdir -p /home/runner/.local/bin
          mv wasm-bindgen-${{ env.WASM_BINDGEN_VERSION }}-x86_64-unknown-linux-musl/wasm-bindgen /home/runner/.local/bin/wasm-bindgen

      - name: Install wasm-opt
        run: |
          curl -L https://github.com/WebAssembly/binaryen/releases/download/version_${{ env.BINARYEN_VERSION }}/binaryen-version_${{ env.BINARYEN_VERSION }}-x86_64-linux.tar.gz --output binaryen.tar.gz
          tar -zxvf binaryen.tar.gz binaryen-version_${{ env.BINARYEN_VERSION }}/bin/wasm-opt
          mv binaryen-version_${{ env.BINARYEN_VERSION }}/bin/wasm-opt /home/runner/.local/bin/wasm-opt

      - uses: actions/cache@v2
        with:
          path: |
            ~/.cargo/registry
            ~/.cargo/git
            target
          key: ${{ runner.os }}-cargo-${{ hashFiles('**/Cargo.lock') }}

      - name: Build site
        run: |
          yarn app build
          wasm-opt -O4 app/dist/app_bg.wasm -o app/dist/app_bg.wasm

      - name: Deploy
        uses: peaceiris/actions-gh-pages@v3
        with:
          github_token: ${{ secrets.GITHUB_TOKEN }}
          publish_dir: ./app/dist
